// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/test;
import ballerina/io;
import ballerina/oauth2;

configurable string clientId = ?;
configurable string clientSecret = ?;
configurable string refreshToken = ?;

OAuth2RefreshTokenGrantConfig auth = {
       clientId: clientId,
       clientSecret: clientSecret,
       refreshToken: refreshToken,
       credentialBearer: oauth2:POST_BODY_BEARER // this line should be added in to when you are going to create auth object.
   };

ConnectionConfig config = {auth};
final Client taxes = check new Client(config);

// @test:Config {}
// isolated function  testPost-/crm/v3/objects/taxes_create() {
// }

@test:Config {}
isolated function  testGetTaxList() returns error?{

    GetCrmV3ObjectsTaxes_getpageQueries params = {
        'limit: 5,
        properties: ["hs_value", "hs_type", "hs_label"]
    };

    CollectionResponseSimplePublicObjectWithAssociationsForwardPaging|error response = check taxes->/.get({}, params);
    if response is CollectionResponseSimplePublicObjectWithAssociationsForwardPaging{
        test:assertNotEquals(response.results[0].id, (), "Tax id's are not found");
        test:assertNotEquals(response.results[0].properties, (), "Tax properties are not found");
        test:assertNotEquals(response.results[0].properties["hs_type"], (), "Tax label is not found");
        test:assertNotEquals(response.results[0].properties["hs_value"], (), "Tax value is not found");
        test:assertNotEquals(response.results[0].properties["hs_label"], (), "Tax type is not found");
        test:assertTrue(response.results.length()<=5, "Tax list is not found");
    }
    else{
        io:println("Error occured while fetching tax list");
    }
}

@test:Config {}
isolated function  testGetTaxbyID() returns error?{

    GetCrmV3ObjectsTaxesTaxid_getbyidQueries params = {
        properties: ["hs_value", "hs_type", "hs_label"]
    };

    final string taxId = "394396506962";

    SimplePublicObjectWithAssociations|error response = check taxes->/[taxId].get({}, params);

    if response is SimplePublicObjectWithAssociations{

        SimplePublicObjectWithAssociations testResponse = {
            "createdAt":"2025-01-02T09:32:56.171Z",
            "archived":false,
            "id":"394396506962",
            "properties":{
                "hs_label":"A percentage-based tax of 7.5%",
                "hs_value":"7.5000",
                "hs_lastmodifieddate":"2025-01-02T15:06:12.727Z",
                "hs_createdate":"2025-01-02T09:32:56.171Z",
                "hs_object_id":"394396506962",
                "hs_type":"PERCENT"
            },
            "updatedAt":"2025-01-02T15:06:12.727Z"};
        test:assertEquals(response, testResponse);
    }
    else{
        io:println("Failed");
    }
}

// @test:Config {}
// isolated function  testDelete-/crm/v3/objects/taxes/{taxId}_archive() {
// }

// @test:Config {}
// isolated function  testPatch-/crm/v3/objects/taxes/{taxId}_update() {
// }

// @test:Config {}
// isolated function  testPost-/crm/v3/objects/taxes/batch/upsert_upsert() {
// }

// @test:Config {}
// isolated function  testPost-/crm/v3/objects/taxes/batch/update_update() {
// }

// @test:Config {}
// isolated function  testPost-/crm/v3/objects/taxes/batch/read_read() {
// }

// @test:Config {}
// isolated function  testPost-/crm/v3/objects/taxes/batch/create_create() {
// }

// @test:Config {}
// isolated function  testPost-/crm/v3/objects/taxes/search_doSearch() {
// }

// @test:Config {}
// isolated function  testPost-/crm/v3/objects/taxes/batch/archive_archive() {
// }
